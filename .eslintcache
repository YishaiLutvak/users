[{"C:\\react\\midProject\\users\\src\\index.js":"1","C:\\react\\midProject\\users\\src\\App.js":"2","C:\\react\\midProject\\users\\src\\reportWebVitals.js":"3","C:\\react\\midProject\\users\\src\\Utils.js":"4","C:\\react\\midProject\\users\\src\\User.js":"5","C:\\react\\midProject\\users\\src\\Users.js":"6","C:\\react\\midProject\\users\\src\\UtilsUsers.js":"7","C:\\react\\midProject\\users\\src\\Task.js":"8","C:\\react\\midProject\\users\\src\\MyContext.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":302,"mtime":1609869711120,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":437,"mtime":1609918190213,"results":"14","hashOfConfig":"11"},{"size":3451,"mtime":1610445693495,"results":"15","hashOfConfig":"11"},{"size":2561,"mtime":1610444452821,"results":"16","hashOfConfig":"11"},{"size":251,"mtime":1609918423830,"results":"17","hashOfConfig":"11"},{"size":964,"mtime":1610443729614,"results":"18","hashOfConfig":"11"},{"size":97,"mtime":1610437555919,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fao5yw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\react\\midProject\\users\\src\\index.js",[],["44","45"],"C:\\react\\midProject\\users\\src\\App.js",["46","47"],"import React,{Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport UsersComp from './Users'\n\nclass App extends Component\n{\n  constructor()\n  {\n    super()\n  }\n\n  render()\n  {\n    \n    return (\n      <div>\n        <UsersComp/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","C:\\react\\midProject\\users\\src\\reportWebVitals.js",[],"C:\\react\\midProject\\users\\src\\Utils.js",["48"],"import axios from 'axios'\n\n\nconst getAllItems = (url) =>\n{\n  return axios.get(url)\n}\n\nconst getItem = (url,id) =>\n{\n  return axios.get(url+ \"/\" + id)\n}\n\nconst creatItem = (url,obj) =>\n{\n  return axios.post(url,obj)\n}\n\nconst updateItem = (url,id,obj) =>\n{\n  return  axios.put(url + \"/\" + id,obj)\n}\n\nconst deleteItem = (url,id) =>\n{\n  return axios.delete(url+\"/\"+id)\n}\n\n\nexport default {getAllItems,getItem,creatItem,updateItem,deleteItem}","C:\\react\\midProject\\users\\src\\User.js",["49"],"import React,{Component} from 'react'\nimport './App.css';\nimport utils from './Utils'\nimport TaskComp from './Task'\n\nclass UserComp extends Component\n{\n  constructor()\n  {\n    super()\n    this.state = {id: 0 , name:'',email: '',todos:[], posts:[],\n    isOtherData:false,street:'', city: '', zipcode:'',isSelect:false}\n  }\n\n  componentDidMount() \n  {\n    this.setState({id:this.props.id})\n    this.setState({name:this.props.name})\n    this.setState({email:this.props.email})\n    this.setState({todos:this.props.todos})\n    this.setState({posts:this.props.posts})\n    this.setState({street:this.props.address.street})\n    this.setState({city:this.props.address.city})\n    this.setState({zipcode:this.props.address.zipcode})\n  }\n\n  updateData = () =>\n  {\n    let obj = { id:this.state.id,name:this.state.name,email: this.state.email,\n       address:{street:this.state.street, city:this.state.city, zipcode:this.state.zipcode} }\n    this.props.update(obj)\n  }\n\n  deleteData = () =>\n  {\n    this.props.delete(this.state.id)\n  }\n  \n  render()\n  {\n    let styleUser;\n    let userTodos;\n    let userPosts;\n    if (this.state.isSelect) {\n      styleUser = {backgroundColor:'orange',borderStyle: 'solid', borderColor:'yellow' , width: '300px'}\n      userTodos=<div style={{width:'550px'}}>\n        Todos User {this.state.id}:<br/>\n        <input style={{backgroundColor:'orange'}} type=\"button\" value=\"Add\"/>\n        <div style={{borderStyle:'solid', backgroundColor:'orange'}}>\n          {this.state.todos.map((todo,index)=>\n          {\n            return <div key={index}><TaskComp todo={todo}/><br/></div>\n          })}\n        </div>\n      </div>\n      \n    }\n    else{\n      userTodos = null;\n      userPosts = null;\n      (this.state.todos.map(todo => todo.complete).indexOf(false)!==-1 ?\n      styleUser={backgroundColor:'greenyellow',borderStyle: 'solid', borderColor:'green' , width: '300px'}:\n      styleUser={backgroundColor:'pink',borderStyle: 'solid', borderColor:'red', width: '300px'})\n    }\n    \n\n    let address\n    this.state.isOtherData? address=<div style={{borderStyle:'solid'}}>\n      Street:\n        <input type='text' value={this.state?.street} onChange={e=>this.setState({street:e.target.value})}/>\n        <br/>\n      City:\n        <input type='text' value={this.state?.city} onChange={e=>this.setState({city:e.target.value})}/><br/>\n      Zip Code:\n        <input type='text' value={this.state?.zipcode} onChange={e=>this.setState({zipcode:e.target.value})}/>\n    </div>:address=null \n\n    return (\n      <div>\n            <div style={styleUser}>\n            <label onClick={()=>this.setState({isSelect:!this.state.isSelect})}>ID:</label> {this.state?.id}<br/>\n            Name: <input type='text' value={this.state?.name} onChange={e=>this.setState({name:e.target.value})}/>\n            <br/>\n            Email: <input type='text' value={this.state?.email} onChange={e=>this.setState({email:e.target.value})}/>\n            <br/>\n            <input type=\"button\" value=\"Other Data\" style={{backgroundColor: 'grey'}}\n              onMouseEnter={()=>this.setState({isOtherData:true})} onClick={()=>this.setState({isOtherData:false})}/>\n            {address}\n            <input type=\"button\" value=\"Update\" onClick={this.updateData}/>\n            <input type=\"button\" value=\"Delete\" onClick={this.deleteData}/>\n            </div>\n            {userTodos}\n            {userPosts}\n      </div>       \n    )\n  }\n}\n\n\nexport default UserComp;\n","C:\\react\\midProject\\users\\src\\Users.js",["50","51","52","53","54","55"],"import React,{Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport utils from './Utils'\nimport UserComp from './User'\nimport MyContext from './MyContext'\n\n\nclass UsersComp extends Component\n{\n  constructor()\n  {\n    super()\n    this.state = {users:[],todos:[],posts:[], search: ''}\n  }\n\n  async componentDidMount() {\n    let resp1 = await utils.getAllItems(\"https://jsonplaceholder.typicode.com/users\")\n    this.setState({users: resp1.data})\n    let resp2 = await utils.getAllItems(\"https://jsonplaceholder.typicode.com/todos\")\n    this.setState({todos: resp2.data})\n    let resp3 = await utils.getAllItems(\"https://jsonplaceholder.typicode.com/posts\")\n    this.setState({posts: resp3.data})\n  }\n\n  updateUser = (obj) =>\n  {\n    let newUsers = this.state.users\n    let index = newUsers.findIndex(x => (x.id == obj.id))\n    if(index>-1)\n    {\n      newUsers[index]={...newUsers[index],name: obj.name,email:obj.email,address: obj.address}\n    }\n    this.setState({users:newUsers})\n    console.log(\"update_User_In_DataBase\")\n  }\n\n  deleteUser = (id) =>\n  {\n    let newUsers = this.state.users\n    let index = newUsers.findIndex(x => (x.id == id))\n    if(index>-1)\n    {\n      newUsers.splice(index,1)\n    }\n    this.setState({users:newUsers})\n    console.log(\"delete_User_In_DataBase\")\n  }\n\n  updateCompleted = (id)=>\n  {\n    let newTodos = this.state.todos\n    let index = newTodos.findIndex(x => (x.id == id))\n    if(index>-1)\n    {\n      newTodos[index]={...newTodos[index],completed: true}\n    }\n    this.setState({todos: newTodos})\n    console.log(\"update_Task_In_DataBase\")\n  }\n\n  render()\n  {\n    let items = this.state.users.filter(\n      x => (x.name.toUpperCase().includes(this.state.search)||x.email.toUpperCase().includes(this.state.search)))\n    .map((item)=>{\n      return <div key={item.id}><UserComp id={item.id} name={item.name} email={item.email} address={item.address}\n        todos={this.state.todos.filter(todo=>todo.userId == item.id)}\n        posts={this.state.posts.filter(post=>post.userId == item.id)}\n        update={this.updateUser} delete={this.deleteUser}/><br/></div>\n    \n    })\n    return (\n      <MyContext.Provider value={{updateCompleted:this.updateCompleted}}>\n        <div style={{borderStyle:'solid', borderColor:'blue'}}>\n          Searsh: <input type=\"text\" onChange={e=>this.setState({search:e.target.value.toUpperCase()})}/>\n          <input type=\"button\" value=\"Add\"/>\n          <br/><br/>\n          {items}\n        </div>\n      </MyContext.Provider>\n    )\n  }\n}\n\n\nexport default UsersComp;\n","C:\\react\\midProject\\users\\src\\UtilsUsers.js",["56"],"C:\\react\\midProject\\users\\src\\Task.js",["57"],"import React,{Component} from 'react'\nimport './App.css';\nimport MyContext from './MyContext'\n\nclass TaskComp extends Component\n{\n  constructor() {\n    super();\n  }\n\n  static contextType = MyContext;\n\n  updateCompleted = ()=>\n  {\n    this.context.updateCompleted(this.props.todo.id)\n  }\n\n  render()\n  {\n    let completedString;\n    let completedButton;\n    if(this.props.todo.completed) \n    {\n      completedString = 'Yes'\n      completedButton = null    \n    }\n    else\n    {\n      completedString = 'No'\n      completedButton = <input type=\"button\" value=\"Mark Completed\"\n       onClick={this.updateCompleted}\n       style={{backgroundColor:'greenyellow'}}/>    \n    } \n    return (\n      <div style={{borderStyle:'solid', borderColor:'pink', backgroundColor:'lightblue', width: '500px'}}>\n        Title: {this.props.todo.title}<br/>\n        Completed: {completedString} <br/>\n        {completedButton}\n      </div>      \n    )\n  }\n}\n\n\nexport default TaskComp;\n","C:\\react\\midProject\\users\\src\\MyContext.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":8,"column":3,"nodeType":"68","messageId":"69","endLine":11,"endColumn":4},{"ruleId":"70","severity":1,"message":"71","line":30,"column":1,"nodeType":"72","endLine":30,"endColumn":69},{"ruleId":"62","severity":1,"message":"73","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"74","severity":1,"message":"75","line":29,"column":47,"nodeType":"76","messageId":"77","endLine":29,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":41,"column":47,"nodeType":"76","messageId":"77","endLine":41,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":53,"column":47,"nodeType":"76","messageId":"77","endLine":53,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":68,"column":58,"nodeType":"76","messageId":"77","endLine":68,"endColumn":60},{"ruleId":"74","severity":1,"message":"75","line":69,"column":58,"nodeType":"76","messageId":"77","endLine":69,"endColumn":60},{"ruleId":"70","severity":1,"message":"71","line":13,"column":1,"nodeType":"72","endLine":13,"endColumn":29},{"ruleId":"66","severity":1,"message":"67","line":7,"column":3,"nodeType":"68","messageId":"69","endLine":9,"endColumn":4},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'utils' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]